
user  nginx;
worker_processes  auto;
worker_rlimit_nofile 65535;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    use epoll;#Linux 下性能最好的 event 模式
    worker_connections  65535;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $upstream_addr - $request_time - $upstream_response_time - $remote_user [$time_local] "$request" '
                      '$status - "$request_body" - $body_bytes_sent - "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;
    client_max_body_size 128m;
    client_body_buffer_size 10M;
    client_header_buffer_size 256k;
    proxy_connect_timeout  10s; 
    proxy_read_timeout   600s;
    proxy_send_timeout   30s; 
    proxy_next_upstream error;    
    proxy_ignore_client_abort on; #resolve 499 error


    keepalive_timeout  120;
    #keepalive_requests 8192; --每个连接最大请求数

    gzip  on;

    gzip_min_length 1k; #最小压缩文件大小

    gzip_buffers 4 16k; #压缩缓冲区

    gzip_http_version 1.1; #压缩版本（默认1.1，前端如果是squid2.5请使用1.0）

    gzip_comp_level 2; #压缩等级,9压缩的最小但是耗费的cpu最高

    gzip_types text/plain application/javascript text/css application/xml application/json;

    include /etc/nginx/conf.d/*.conf;
}


# TCP/UDP proxy and load balancing block
#
#stream {
    # Example configuration for TCP load balancing

    #upstream stream_backend {
    #    zone tcp_servers 64k;
    #    server backend1.example.com:12345;
    #    server backend2.example.com:12345;
    #}

    #server {
    #    listen 12345;
    #    status_zone tcp_server;
    #    proxy_pass stream_backend;
    #}
#}
